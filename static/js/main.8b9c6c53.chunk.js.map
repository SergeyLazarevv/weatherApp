{"version":3,"sources":["header.tsx","WeatherInfo.tsx","App.tsx","index.tsx"],"names":["Header","src","className","WeatherInfo","props","convert","fahrenheit","celsuis","Number","Math","floor","weatherInfo","main","temp","temp_max","temp_min","maxTemp","minTemp","App","inputRef","getData","event","preventDefault","sity","state","fetch","then","res","json","data","console","log","setState","infoVisible","current","blur","catch","err","setData","target","value","newSearch","React","createRef","this","onSubmit","type","placeholder","onChange","ref","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAEe,SAASA,IACpB,OACI,gCACI,yBAAKC,IAAI,UAAUC,UAAU,SAC7B,wBAAIA,UAAU,QACV,qCACA,oCACA,0CCPD,SAASC,EAAYC,GAChC,IAAIC,EAAU,SAACC,GACX,IAAIC,EAAkBC,OAAOF,GAAY,IACzC,OAAOG,KAAKC,MAAMH,IAHsB,EAMxC,CAACF,EAAQD,EAAMO,YAAYC,KAAKC,MAChCR,EAAQD,EAAMO,YAAYC,KAAKE,UAC/BT,EAAQD,EAAMO,YAAYC,KAAKG,WAH9BF,EALuC,KAKlCG,EALkC,KAK1BC,EAL0B,KAS5C,OACI,yBAAKf,UAAU,eACX,4BACI,oGAAmBW,EAAnB,MACA,6KAAgCG,EAAhC,MACA,uKAA+BC,EAA/B,Q,ICuDDC,E,kDAzDb,WAAYd,GAAa,IAAD,8BACtB,cAAMA,IAFAe,cACgB,IAUxBC,QAAU,SAACC,GACTA,EAAMC,iBACN,IAAIC,EAAe,EAAKC,MAAMD,KAE9BE,MAAM,qDAAD,OAAsDF,EAAtD,+CACJG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GAGL,OAFAC,QAAQC,IAAIF,EAAKjB,MACjBkB,QAAQC,IAAI,EAAKP,MAAMK,MAChBA,KAGRH,MAAK,SAAAG,GAAI,OAAI,EAAKG,SAAS,CAACH,YAE5BH,MAAK,SAAAG,GAAI,OAAE,EAAKG,SAAS,CAACT,KAAM,QAEhCG,MAAK,SAAAG,GAAI,OAAE,EAAKG,SAAS,CAACC,aAAa,OAEvCP,MAAK,SAAAG,GAAI,uBAAE,EAAKV,SAASe,eAAhB,aAAE,EAAuBC,UAClCC,OAAM,SAAAC,GACLP,QAAQC,IAAIM,OA9BQ,EAiCxBC,QAAU,SAACjB,GACT,EAAKW,SAAS,CAACT,KAAMF,EAAMkB,OAAOC,SAlCZ,EAoCxBC,UAAY,WACV,EAAKT,SAAS,CAACC,aAAa,KAlC5B,EAAKd,SAAWuB,IAAMC,YACtB,EAAKnB,MAAQ,CACXD,KAAM,GACNU,aAAa,EACbJ,KAAM,WAPc,E,qDAyCtB,OADAC,QAAQC,IAAI,aAEV,yBAAK7B,UAAU,OACb,kBAACF,EAAD,MACA,0BAAME,UAAW0C,KAAKpB,MAAMS,YAAc,mBAAqB,aAAcY,SAAUD,KAAKxB,SAC1F,2BAAOlB,UAAW0C,KAAKpB,MAAMS,YAAc,gCAAkC,QAASa,KAAK,OACnFC,YAAaH,KAAKpB,MAAMS,YAAc,IAAM,aAC5Ce,SAAUJ,KAAKN,QAASE,MAAOI,KAAKpB,MAAMD,KAC1C0B,IAAKL,KAAKzB,SACV+B,QAASN,KAAKH,aAEvBG,KAAKpB,MAAMS,YAAc,kBAAC9B,EAAD,CAAaQ,YAAaiC,KAAKpB,MAAMK,OAAW,Q,GArDhEa,IAAMS,WCRxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.8b9c6c53.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <img src='sun.png' className='logo' />\r\n            <ul className='menu'>\r\n                <li>About</li>\r\n                <li>News</li>\r\n                <li>Contacts</li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function WeatherInfo(props: any) {\r\n    let convert = (fahrenheit: string):number => {\r\n        let celsuis: number = Number(fahrenheit)-273;\r\n        return Math.floor(celsuis)\r\n    }\r\n    let [temp,maxTemp,minTemp] :Array<number> = \r\n        [convert(props.weatherInfo.main.temp),\r\n        convert(props.weatherInfo.main.temp_max),\r\n        convert(props.weatherInfo.main.temp_min)]\r\n    return (\r\n        <div className='weatherInfo'>\r\n            <ul>\r\n                <li>Температура : {temp} C</li>\r\n                <li>Максимальная температура : {maxTemp} C</li>\r\n                <li>Минимальная температура : {minTemp} C</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport background from './img/background.svg';\nimport './App.css';\nimport Header from './header';\nimport WeatherInfo from './WeatherInfo'\n//create interface for state\ninterface AppComponentState {\n  sity: string,\n  infoVisible: boolean,\n  data: any\n}\n\nclass App extends React.Component <any,AppComponentState>{\n  private inputRef: React.RefObject<HTMLInputElement>;\n  constructor(props: any) {\n    super(props)\n    //create ref for input field\n    this.inputRef = React.createRef();\n    this.state = {\n      sity: \"\",\n      infoVisible: false,\n      data: 'no data'\n    }\n  }\n  getData = (event: any) => {\n    event.preventDefault();\n    let sity: string = this.state.sity;\n    //get weather info\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${sity},ru&APPID=0cb0672cbaa9d7e3d59356e1bdbb7a31`)\n    .then(res => res.json())\n    .then((data)=> {\n      console.log(data.main)\n      console.log(this.state.data)\n      return data\n    })\n     //set data to state for using in child component\n    .then(data => this.setState({data}))\n    //clear input field\n    .then(data=>this.setState({sity: ''}))\n    //ifovisible for child information component rendering \n    .then(data=>this.setState({infoVisible: true}))\n    //remove focus from input and trasform them in close button\n    .then(data=>this.inputRef.current?.blur())\n    .catch(err => {\n      console.log(err);\n    });\n  }\n  setData = (event: any) => {\n    this.setState({sity: event.target.value})\n  }\n  newSearch = () => {\n    this.setState({infoVisible: false})\n  }\n  render() {\n    console.log('render!!!')\n    return (\n      <div className=\"app\">\n        <Header />\n        <form className={this.state.infoVisible ? \"input-wrap toTop\" : \"input-wrap\"} onSubmit={this.getData} >\n          <input className={this.state.infoVisible ? \"input input-close input-hover\" : \"input\"} type=\"text\" \n                  placeholder={this.state.infoVisible ? \"X\" : \"Enter sity\"} \n                  onChange={this.setData} value={this.state.sity}\n                  ref={this.inputRef} \n                  onClick={this.newSearch} />\n        </form>\n        {this.state.infoVisible ? <WeatherInfo weatherInfo={this.state.data} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}